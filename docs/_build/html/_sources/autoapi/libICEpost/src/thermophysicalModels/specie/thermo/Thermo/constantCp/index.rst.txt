libICEpost.src.thermophysicalModels.specie.thermo.Thermo.constantCp
===================================================================

.. py:module:: libICEpost.src.thermophysicalModels.specie.thermo.Thermo.constantCp

.. autoapi-nested-parse::

   @author: F. Ramognino       <federico.ramognino@polimi.it>
   Last update:        12/06/2023



Attributes
----------

.. autoapisummary::

   libICEpost.src.thermophysicalModels.specie.thermo.Thermo.constantCp.Tstd


Classes
-------

.. autoapisummary::

   libICEpost.src.thermophysicalModels.specie.thermo.Thermo.constantCp.constantCp


Module Contents
---------------

.. py:data:: Tstd

.. py:class:: constantCp(Rgas, cp=None, cv=None, gamma=None, hf=float('nan'))

   Bases: :py:obj:`libICEpost.src.thermophysicalModels.specie.thermo.Thermo.Thermo.Thermo`


   Class for computation of thermophysical properties with constant cp cv and gamma.

   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Attibutes:
       Rgas: float
           The mass specific gas constant



   .. py:method:: fromDictionary(dictionary)
      :classmethod:


      Create from dictionary:
      {
          Rgas:  float
              Mass specific gas constant

          cp:    float (None)
              Mass-specific constant-pressure heat capacity

          cv:    float (None)
              Mass-specific constant-volume heat capacity

          gamma: float (None)
              cp/cv ratio

          hf:    float (0.0)
              Enthalpy of formation (optional)
      }

      Give 1 out of three of (cp, cv, gamma)



   .. py:method:: __str__()


   .. py:method:: __repr__()


   .. py:method:: cp(p: float, T: float) -> float

      Constant pressure heat capacity [J/kg/K]



   .. py:method:: ha(p: float, T: float) -> float

      Absolute enthalpy [J/kg]

      ha(T) = cp * (T - Tstd) + hf



   .. py:method:: hf() -> float

      Enthalpy of formation [J/kg]

      hf = ha(Tstd)



   .. py:method:: dcpdT(p: float, T: float) -> float

      dcp/dT [J/kg/K^2]



