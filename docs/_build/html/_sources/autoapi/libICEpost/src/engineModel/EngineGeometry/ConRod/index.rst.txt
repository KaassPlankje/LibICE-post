libICEpost.src.engineModel.EngineGeometry.ConRod
================================================

.. py:module:: libICEpost.src.engineModel.EngineGeometry.ConRod

.. autoapi-nested-parse::

   @author: F. Ramognino       <federico.ramognino@polimi.it>
   Last update:        12/06/2023



Classes
-------

.. autoapisummary::

   libICEpost.src.engineModel.EngineGeometry.ConRod.ConRodGeometry


Module Contents
---------------

.. py:class:: ConRodGeometry(/, CR: float, bore: float, stroke: float, conRodLen: float, pistonCylAreaRatio: float = 1.0, headCylAreaRatio=1.0, pinOffset=0.0)

   Bases: :py:obj:`libICEpost.src.engineModel.EngineGeometry.EngineGeometry.EngineGeometry`


   Geometry for simple engine piston.

   NOTE: Crank angles are defined with 0 CAD at TDC

   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Attibutes:

       Variable   | Type       | Unit   | Description
       -----------|------------|--------|-------------------------
       CR         | float      | -      | Compression ratio
       lam        | float      | -      | conRodLen/crankRadius
       -----------|------------|--------|-------------------------
       D          | float      | m      | Bore
       S          | float      | m      | Stroke
       l          | float      | m      | connecting-rod length
       -----------|------------|--------|-------------------------
       cylArea    | float      | m^2    | cylinder cross section
       pistonArea | float      | m^2    | piston surface area
       headArea   | float      | m^2    | cylinder head area
       -----------|------------|--------|-------------------------
       Vs         | float      | m^3    | Displacement volume
       Vmin       | float      | m^3    | Mimimum volume
       Vmax       | float      | m^3    | Maximum volume


   .. py:method:: fromDictionary(inputDict)
      :classmethod:


      Construct from dictionary containing the following parameters:

      [Variable]        | [Type] | [Default] | [Unit] | [Description]
      ------------------|--------|-----------|--------|----------------------------------
      CR                | float  | -         | -      | Compression ratio
      ------------------|--------|-----------|--------|----------------------------------
      bore              | float  | -         | m      | Bore
      stroke            | float  | -         | m      | Stroke
      conRodLen         | float  | -         | m      | connecting-rod length
      ------------------|--------|-----------|--------|----------------------------------
      pistCylAreaRatio  | float  | 1         | -      | piston surf. area / cyl. section
      headCylAreaRatio  | float  | 1         | -      | head surf. area / cyl. section




   .. py:method:: __str__()


   .. py:attribute:: inputDict


   .. py:attribute:: defaultDict


   .. py:method:: s(CA: float | collections.abc.Iterable) -> float | numpy.ndarray

      Returns the piston position at CA (reference to TDC)

      :param CA: Time in CA
      :type CA: float | Iterable

      :returns: Piston position [m]
      :rtype: float|np.ndarray[float]



   .. py:method:: V(CA: float | collections.abc.Iterable) -> float | numpy.ndarray

      Returns the instantaneous in-cylinder volume at CA

      :param CA: Time in CA
      :type CA: float | Iterable

      :returns: In-cylinder volume [m^3]
      :rtype: float|np.ndarray[float]



   .. py:method:: dsdCA(CA: float | collections.abc.Iterable) -> float | numpy.ndarray

      Returns the time (in CA) derivative of instantaneous piston position at CA
      :param CA: Time in CA
      :type CA: float | Iterable

      :returns: ds/dCA [m/CA]
      :rtype: float|np.ndarray[float]



   .. py:method:: dVdCA(CA: float | collections.abc.Iterable) -> float | numpy.ndarray

      Returns the time (in CA) derivative of instantaneous in-cylinder volume at CA
      :param CA: Time in CA
      :type CA: float | Iterable

      :returns: dV/dCA [m^3/CA]
      :rtype: float|np.ndarray[float]



   .. py:method:: linerArea(CA: float | collections.abc.Iterable) -> float | numpy.ndarray

      Returns the liner area at CA
      :param CA: Time in CA
      :type CA: float | Iterable

      :returns: [m^2]
      :rtype: float|np.ndarray[float]



   .. py:method:: A(CA: float | collections.abc.Iterable) -> float | numpy.ndarray

      Returns the chamber area at CA
      :param CA: Time in CA
      :type CA: float | Iterable

      :returns: [m^2]
      :rtype: float|np.ndarray[float]



   .. py:method:: areas(CA: float | collections.abc.Iterable) -> pandas.DataFrame

      CA:     float / list<float/int>
          Crank angle

      Returns a pandas.Dataframe with area of all patches at CA

      :param CA: Time in CA
      :type CA: float | Iterable

      :returns: DataFrame of areas [m^2] at CA. Columns are patch names and CA.
      :rtype: pandas.Dataframe



